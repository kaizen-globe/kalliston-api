{"version":3,"file":"test.js","names":["chai","use","chatHttp","expect","describe","it","done","user","email","password","gender","request","app","post","set","send","end","err","res","status","to","equal","body","data","include","id","get","should","have","property","userId","eql","updateduser","put"],"sources":["../../api/test/test.js"],"sourcesContent":["import chai from 'chai';\r\nimport chatHttp from 'chai-http';\r\nimport app from '../index';\r\n\r\nchai.use(chatHttp);\r\nconst { expect } = chai;\r\n\r\ndescribe('Testing the user endpoints:', () => {\r\n  it('It should create a user', (done) => {\r\n    const user = {\r\n      email: 'test@gmail.com',\r\n      password: 'test123',\r\n      gender: 'male'\r\n    };\r\n    chai.request(app)\r\n      .post('/api/v1/users')\r\n      .set('Accept', 'application/json')\r\n      .send(user)\r\n      .end((err, res) => {\r\n        expect(res.status).to.equal(201);\r\n        expect(res.body.data).to.include({\r\n          id: 1,\r\n          email: user.email,\r\n          password: user.password,\r\n          gender: user.gender\r\n        });\r\n        done();\r\n      });\r\n  });\r\n\r\n  it('It should not create a user with incomplete parameters', (done) => {\r\n    const user = {\r\n      password: 'test123',\r\n      gender: 'male'\r\n    };\r\n    chai.request(app)\r\n      .post('/api/v1/users')\r\n      .set('Accept', 'application/json')\r\n      .send(user)\r\n      .end((err, res) => {\r\n        expect(res.status).to.equal(400);\r\n        done();\r\n      });\r\n  });\r\n\r\n  it('It should get all users', (done) => {\r\n    chai.request(app)\r\n      .get('/api/v1/users')\r\n      .set('Accept', 'application/json')\r\n      .end((err, res) => {\r\n        expect(res.status).to.equal(200);\r\n        res.body.data[0].should.have.property('id');\r\n        res.body.data[0].should.have.property('email');\r\n        res.body.data[0].should.have.property('password');\r\n        res.body.data[0].should.have.property('gender');\r\n        done();\r\n      });\r\n  });\r\n\r\n  it('It should get a particular user', (done) => {\r\n    const userId = 1;\r\n    chai.request(app)\r\n      .get(`/api/v1/users/${userId}`)\r\n      .set('Accept', 'application/json')\r\n      .end((err, res) => {\r\n        expect(res.status).to.equal(200);\r\n        res.body.data.should.have.property('id');\r\n        res.body.data.should.have.property('email');\r\n        res.body.data.should.have.property('password');\r\n        res.body.data.should.have.property('gender');\r\n        done();\r\n      });\r\n  });\r\n\r\n  it('It should not get a particular user with invalid id', (done) => {\r\n    const userId = 8888;\r\n    chai.request(app)\r\n      .get(`/api/v1/users/${userId}`)\r\n      .set('Accept', 'application/json')\r\n      .end((err, res) => {\r\n        expect(res.status).to.equal(404);\r\n        res.body.should.have.property('message')\r\n                            .eql(`Cannot find user with the id ${userId}`);\r\n        done();\r\n      });\r\n  });\r\n\r\n  it('It should not get a particular user with non-numeric id', (done) => {\r\n    const userId = 'aaa';\r\n    chai.request(app)\r\n      .get(`/api/v1/users/${userId}`)\r\n      .set('Accept', 'application/json')\r\n      .end((err, res) => {\r\n        expect(res.status).to.equal(400);\r\n        res.body.should.have.property('message')\r\n                            .eql('Please input a valid numeric value');\r\n        done();\r\n      });\r\n  });\r\n\r\n  it('It should update a user', (done) => {\r\n    const userId = 1;\r\n    const updateduser = {\r\n      id: userId,\r\n      email: 'test1@gmail.com',\r\n      password: 'test1234',\r\n      gender: 'female'\r\n    };\r\n    chai.request(app)\r\n      .put(`/api/v1/users/${userId}`)\r\n      .set('Accept', 'application/json')\r\n      .send(updateduser)\r\n      .end((err, res) => {\r\n        expect(res.status).to.equal(200);\r\n        expect(res.body.data.id).equal(updateduser.id);\r\n        expect(res.body.data.email).equal(updateduser.email);\r\n        expect(res.body.data.password).equal(updateduser.password);\r\n        expect(res.body.data.gender).equal(updateduser.gender);\r\n        done();\r\n      });\r\n  });\r\n\r\n  it('It should not update a user with invalid id', (done) => {\r\n    const userId = '9999';\r\n    const updateduser = {\r\n      id: userId,\r\n      email: 'Updated Awesome user again',\r\n      password: '$11.99',\r\n      gender: 'We have updated the password'\r\n    };\r\n    chai.request(app)\r\n      .put(`/api/v1/users/${userId}`)\r\n      .set('Accept', 'application/json')\r\n      .send(updateduser)\r\n      .end((err, res) => {\r\n        expect(res.status).to.equal(404);\r\n        res.body.should.have.property('message')\r\n                            .eql(`Cannot find user with the id: ${userId}`);\r\n        done();\r\n      });\r\n  });\r\n\r\n  it('It should not update a user with non-numeric id value', (done) => {\r\n    const userId = 'ggg';\r\n    const updateduser = {\r\n      id: userId,\r\n      email: 'Updated Awesome user again',\r\n      password: '$11.99',\r\n      gender: 'We have updated the password'\r\n    };\r\n    chai.request(app)\r\n      .put(`/api/v1/users/${userId}`)\r\n      .set('Accept', 'application/json')\r\n      .send(updateduser)\r\n      .end((err, res) => {\r\n        expect(res.status).to.equal(400);\r\n        res.body.should.have.property('message')\r\n                            .eql('Please input a valid numeric value');\r\n        done();\r\n      });\r\n  });\r\n\r\n\r\n  it('It should delete a user', (done) => {\r\n    const userId = 1;\r\n    chai.request(app)\r\n      .delete(`/api/v1/users/${userId}`)\r\n      .set('Accept', 'application/json')\r\n      .end((err, res) => {\r\n        expect(res.status).to.equal(200);\r\n        expect(res.body.data).to.include({});\r\n        done();\r\n      });\r\n  });\r\n\r\n  it('It should not delete a user with invalid id', (done) => {\r\n    const userId = 777;\r\n    chai.request(app)\r\n      .delete(`/api/v1/users/${userId}`)\r\n      .set('Accept', 'application/json')\r\n      .end((err, res) => {\r\n        expect(res.status).to.equal(404);\r\n        res.body.should.have.property('message')\r\n                            .eql(`user with the id ${userId} cannot be found`);\r\n        done();\r\n      });\r\n  });\r\n\r\n  it('It should not delete a user with non-numeric id', (done) => {\r\n    const userId = 'bbb';\r\n    chai.request(app)\r\n      .delete(`/api/v1/users/${userId}`)\r\n      .set('Accept', 'application/json')\r\n      .end((err, res) => {\r\n        expect(res.status).to.equal(400);\r\n        res.body.should.have.property('message').eql('Please provide a numeric value');\r\n        done();\r\n      });\r\n  });\r\n});"],"mappings":"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"}